# -*- YAML -*-
# This is a Spack Environment file.
#
# It describes a set of packages to be installed, along with
# configuration settings.
spack:
  definitions:
  - compiler: [${MAIN_COMPILER_SPEC}]
  - root:
    - matrix:
      - - root
      - ['+opengl+x', '~opengl~x']
  specs:
  - matrix:
    -
      - critic
      - art-root-io
      - gallery
      - canvas-root-io
    - - $^root
  - art
  - canvas
  - messagefacility
  - fhicl-cpp
  - cetlib
  - hep-concurrency
  - cetlib-except
  - cetmodules
  view: false
${EXTRA_ENV_CONFIG}
    art:
      require:
      - '@${ART_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    art-root-io:
      require:
      - '@${ART_ROOT_IO_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    binutils:
      require:
      - '+gas+gold+ld+lto+plugins'
      - '%${NATIVE_COMPILER_SPEC}'
      - '@${BINUTILS_SPACK_VERSION}'
    bison:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    boost:
      require:
      - '@${BOOST_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
    canvas:
      require:
      - '@${CANVAS_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    canvas-root-io:
      require:
      - '@${CANVAS_ROOT_IO_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    catch2:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      - build_type=Release
    cetlib:
      require:
      - '@${CETLIB_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    cetlib-except:
      require:
      - '@${CETLIB_EXCEPT_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    cetmodules:
      require:
      - '+versioned-docs'
      - '@${CETMODULES_SPACK_VERSION}'
      - '%${NATIVE_COMPILER_SPEC}'
      - build_type=Release
      - '^builtin.py-sphinxcontrib-moderncmakedomain'
    clhep:
      require:
      - '@${CLHEP_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=Release
    cmake:
      require:
      - '~ownlibs'
      - '%${NATIVE_COMPILER_SPEC}'
      - build_type=Release
    critic:
      require:
      - '@${CRITIC_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    doxygen:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      - build_type=Release
    fftw:
      require:
      - '~mpi+openmp'
      - '%${NATIVE_COMPILER_SPEC}'
    fhicl-cpp:
      require:
      - '@${FHICLCPP_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    flex:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    freetype:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    ftgl:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=Release
    gallery:
      require:
      - '@${GALLERY_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    git:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    gl2ps:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    glew:
      require:
      - '@${GLEW_SPACK_VERSION}'
      - '%${NATIVE_COMPILER_SPEC}'
    glproto:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    glx:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    gmake:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    gsl:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    hep-concurrency:
      require:
      - '@${HEP_CONCURRENCY_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    hwloc:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    intel-tbb-oneapi:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=Release
    json-c:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libarchive:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
      - 'crypto=openssl'
    libedit:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libffi:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
      - '@:3.3'
    libice:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libjpeg-turbo:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libmng:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libpng:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libsm:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libunwind:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libuv:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libx11:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libxcb:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libxext:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libxft:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libxpm:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    libxt:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    lz4:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    mesa:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      - '~llvm'
    mesa-glu:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    meson:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    messagefacility:
      require:
      - '@${MESSAGEFACILITY_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    nasm:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    ncurses:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    ninja:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    nlohmann-json:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    openblas:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      - 'threads=openmp'
    openssl:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    patchelf:
      require:
      - '@${PATCHELF_SPACK_VERSION}'
      - '%${NATIVE_COMPILER_SPEC}'
    pcre:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    pcre2:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    perl:
      require:
      - '+open+opcode'
      - '%${NATIVE_COMPILER_SPEC}'
    perl-data-dumper:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    pkg-config:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    postgresql:
      require:
      - '+client_only+perl+threadsafe+xml'
      - '%${NATIVE_COMPILER_SPEC}'
    py-mako:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    py-pip:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    py-pybind11:
      require:
      - '%${MAIN_COMPILER_SPEC}'
    py-setuptools:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    py-sphinx:
      require:
      - '@${SPHINX_SPACK_VERSION}'
    py-wheel:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    python:
      require:
      - '@${PYTHON_SPACK_VERSION}'
      - '%${NATIVE_COMPILER_SPEC}'
    range-v3:
      require:
      - '~doc'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
    root:
      require:
      - '~davix+emacs+fftw+http+mlp+postgres+pythia6+root7+spectrum+sqlite+ssl+webgui'
      - '@${ROOT_SPACK_VERSION}'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=${BUNDLE_CMAKE_BUILD_TYPE}
    scitokens-cpp:
      require:
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=Release
    sqlite:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    unuran:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    vdt:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    xextproto:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    xproto:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    xrandr:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    xrootd:
      require:
      - '+client_only~davix+krb5~readline+python+scitokens-cpp'
      - '%${MAIN_COMPILER_SPEC}'
      ${MAIN_COMPILER_CXX_STANDARD_OPT}
      ${MAIN_COMPILER_CXXFLAGS}
      - build_type=Release
    xxhash:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    xz:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
    zlib-api:
      require:
      - zlib
    zstd:
      require:
      - '%${NATIVE_COMPILER_SPEC}'
